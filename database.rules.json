{
    "rules": {
        ".read": false,
        ".write": false,

        "rooms": {
            ".write": "!data.exists() || !newData.exists()",
            ".read": true,

            "$key": {
                ".write": "!data.exists() || ((data.exists() && !newData.exists()) && root.child('rooms').child($key).child('room-info').child('owner').val() === auth.uid)",
                "room-info": {
                    ".read": true,
                    ".write": "(data.exists() && newData.exists()) && root.child('rooms').child($key).child('room-info').child('owner').val() === auth.uid",
                    ".validate": "newData.hasChildren(['created', 'owner', 'playing'])"

                },
                  
                "users": {
                  	".write": "!data.exists() || ((data.exists() && !newData.exists()) && root.child('rooms').child($key).child('room-info').child('owner').val() === auth.uid)",
                    "$uid": {
                      	".write": "!data.exists()",
                        ".validate": "newData.hasChildren(['name', 'hand'])",
                        "hand": {
                            ".read": "$uid === auth.uid",
                            ".write": "$uid === auth.uid" 
                        }
                    }
                    
                },

                "chat": {
                    ".write": "!data.exists() || ((data.exists() && !newData.exists()) && root.child('rooms').child($key).child('room-info').child('owner').val() === auth.uid)",
                    "$timestamp": {
                        ".write": "!data.exists()",
                        ".validate": "newData.hasChildren(['uid', 'name', 'message'])"
                    }
                    
                },
            
              	"$other": { ".validate": false }
            }
        }

    }
}



